"""Add rule table

Revision ID: 50f03f459df6
Revises: b15c7cd45dcb
Create Date: 2024-11-05 06:47:19.791211

"""

from typing import Sequence, Union

import sqlalchemy as sa

from alembic import op
from app.db import custom_types

# revision identifiers, used by Alembic.
revision: str = "50f03f459df6"
down_revision: Union[str, None] = "b15c7cd45dcb"
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        "rule",
        sa.Column("id", sa.Integer(), nullable=False),
        sa.Column("name", sa.String(length=50), nullable=True),
        sa.Column("filtering_policy_id", sa.Integer(), nullable=False),
        sa.Column("source_ip", custom_types.IPv4Address(length=15), nullable=False),
        sa.Column(
            "destination_ip", custom_types.IPv4Address(length=15), nullable=False
        ),
        sa.Column("destination_port", sa.Integer(), nullable=False),
        sa.Column(
            "protocol",
            sa.Enum("ANY", "TCP", "UDP", "ICMP", name="protocol"),
            nullable=False,
        ),
        sa.Column(
            "action", sa.Enum("DENY", "ALLOW", name="ruleaction"), nullable=False
        ),
        sa.Column("next_rule_id", sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(
            ["filtering_policy_id"],
            ["filtering_policy.id"],
        ),
        sa.ForeignKeyConstraint(
            ["next_rule_id"],
            ["rule.id"],
        ),
        sa.PrimaryKeyConstraint("id"),
        sa.UniqueConstraint(
            "filtering_policy_id",
            "source_ip",
            "destination_ip",
            "destination_port",
            "protocol",
        ),
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table("rule")
    # ### end Alembic commands ###
